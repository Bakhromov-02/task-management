components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Enter: Bearer <token>"
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "507f1f77bcf86cd799439011"
        email:
          type: string
          format: email
          example: "user@example.com"
        role:
          type: string
          enum: [user, admin]
          example: "user"
        createdAt:
          type: string
          format: date-time
    
    Task:
      type: object
      properties:
        id:
          type: string
          example: "507f1f77bcf86cd799439011"
        title:
          type: string
          example: "Complete project documentation"
        description:
          type: string
          example: "Write comprehensive API documentation"
        status:
          type: string
          enum: [pending, completed]
          example: "pending"
        priority:
          type: string
          enum: [low, medium, high]
          example: "medium"
        userId:
          type: string
          example: "507f1f77bcf86cd799439011"
        createdAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
          nullable: true
    
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          type: object
    
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error message"
        error:
          type: string
          example: "ERROR_CODE"
    
    PaginatedResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: array
              items: {}
            pagination:
              type: object
              properties:
                page:
                  type: number
                  example: 1
                limit:
                  type: number
                  example: 10
                total:
                  type: number
                  example: 100
                totalPages:
                  type: number
                  example: 10

  responses:
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Authentication required"
            error: "NO_TOKEN"
    
    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Access denied"
            error: "INSUFFICIENT_PERMISSIONS"
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Resource not found"
    
    ValidationError:
      description: Validation failed
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
              - type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
          example:
            success: false
            message: "Validation failed"
            errors:
              - field: "email"
                message: "Please provide a valid email"